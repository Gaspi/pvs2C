/* ----------------------------------------
      C file generated from demo.pvs
   ----------------------------------------
  Make sure to link GMP in compilation:
      gcc -o demo demo.c -lgmp
      ./demo
   ---------------------------------------- */

#include<stdio.h>
#include<gmp.h>
#include "demo.h"

#define TRUE 1
#define FALSE 0

int main(void) {
  printf("Executing demo ...\n");
  return 0;
}


int pvs_a306() {
  int result;
  result = 8;
  return result;
}

int pvs_d_a307() {
  int result;
  result = 8;
  return result;
}

int pvs_b308(int x) {
  int result;
  result = x;
  return result;
}

int pvs_d_b309(int x) {
  int result;
  result = x;
  return result;
}

void pvs_incr310(int* result, int* t55996) {
  int L314;
  L314 = pvsSelect(t55996, 0);
  copy_int*(result, t55996);
  pvsDestructiveUpdate(result, L314, pvsSelect(t55996, 9));
}

void pvs_d_incr311(int* result, int* t55996) {
  int L314;
  L314 = pvsSelect(t55996, 0);
  copy_int*(result, t55996);
  pvsDestructiveUpdate(result, L314, pvsSelect(t55996, 9));
}

void pvs_foo315(int* result, int* t55996) {
  int L329;
  L329 = 0;
  mpz_t conv330;
  mpz_init(conv330);
  mpz_set_si(conv330, (long) 1);
  mpz_t aux331;
  mpz_init(aux331);
  mpz_add_ui(aux331, conv330, (unsigned long) pvsSelect(t55996, 9));
  mpz_clear(conv330);
  int L332;
  L332 = pvsSelect(t55996, 0);
  mpz_t conv333;
  mpz_init(conv333);
  mpz_set_si(conv333, (long) 1);
  mpz_t aux334;
  mpz_init(aux334);
  mpz_add_ui(aux334, conv333, (unsigned long) pvsSelect(t55996, 0));
  mpz_clear(conv333);
  copy_int*(result, t55996);
  pvsDestructiveUpdate(result, L329, ( (int) mpz_get_si(aux331) ));
  pvsDestructiveUpdate(result, L332, ( (int) mpz_get_si(aux334) ));
  mpz_clear(aux331);
  mpz_clear(aux334);
}

void pvs_d_foo316(int* result, int* t55996) {
  int L329;
  L329 = 0;
  mpz_t conv330;
  mpz_init(conv330);
  mpz_set_si(conv330, (long) 1);
  mpz_t aux331;
  mpz_init(aux331);
  mpz_add_ui(aux331, conv330, (unsigned long) pvsSelect(t55996, 9));
  mpz_clear(conv330);
  int L332;
  L332 = pvsSelect(t55996, 0);
  mpz_t conv333;
  mpz_init(conv333);
  mpz_set_si(conv333, (long) 1);
  mpz_t aux334;
  mpz_init(aux334);
  mpz_add_ui(aux334, conv333, (unsigned long) pvsSelect(t55996, 0));
  mpz_clear(conv333);
  copy_int*(result, t55996);
  pvsDestructiveUpdate(result, L329, ( (int) mpz_get_si(aux331) ));
  pvsDestructiveUpdate(result, L332, ( (int) mpz_get_si(aux334) ));
  mpz_clear(aux331);
  mpz_clear(aux334);
}